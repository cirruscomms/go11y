// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: record.sql

package o11y

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const getAPIRequests = `-- name: GetAPIRequests :one
SELECT id, url, method, request_headers, request_body, response_time_ms, response_headers, response_body, status_code, created_at
FROM remote_api_requests
ORDER BY created_at DESC
LIMIT 1
`

func (q *Queries) GetAPIRequests(ctx context.Context) (RemoteApiRequest, error) {
	row := q.db.QueryRow(ctx, getAPIRequests)
	var i RemoteApiRequest
	err := row.Scan(
		&i.Id,
		&i.Url,
		&i.Method,
		&i.RequestHeaders,
		&i.RequestBody,
		&i.ResponseTimeMs,
		&i.ResponseHeaders,
		&i.ResponseBody,
		&i.StatusCode,
		&i.CreatedAt,
	)
	return i, err
}

const storeAPIRequest = `-- name: StoreAPIRequest :exec
INSERT INTO remote_api_requests (
    url,
    method,
    request_headers,
    request_body,
    response_time_ms,
    response_headers,
    response_body,
    status_code
) VALUES (
    $1,
    $2,
    $3,
    $4,
    $5,
    $6,
    $7,
    $8
)
`

type StoreAPIRequestParams struct {
	Url             string      `db:"url" json:"url"`
	Method          string      `db:"method" json:"method"`
	RequestHeaders  []byte      `db:"request_headers" json:"request_headers"`
	RequestBody     pgtype.Text `db:"request_body" json:"request_body"`
	ResponseTimeMs  int64       `db:"response_time_ms" json:"response_time_ms"`
	ResponseHeaders []byte      `db:"response_headers" json:"response_headers"`
	ResponseBody    pgtype.Text `db:"response_body" json:"response_body"`
	StatusCode      int32       `db:"status_code" json:"status_code"`
}

func (q *Queries) StoreAPIRequest(ctx context.Context, arg StoreAPIRequestParams) error {
	_, err := q.db.Exec(ctx, storeAPIRequest,
		arg.Url,
		arg.Method,
		arg.RequestHeaders,
		arg.RequestBody,
		arg.ResponseTimeMs,
		arg.ResponseHeaders,
		arg.ResponseBody,
		arg.StatusCode,
	)
	return err
}
